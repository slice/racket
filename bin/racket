#!/usr/bin/env node

const meow = require('meow')
const path = require('path')
const serve = require('webpack-serve')
const getPort = require('get-port')

const help = `
  usage
    $ racket [entrypoint = index.js]

  options
    --port, -p  port to serve on

  description
    a mini dev server for javascript in the browser
`

const cli = meow(help, {
  flags: {
    port: { type: 'string', alias: 'p', default: '9000' },
  },
})

const entry = path.resolve(
  process.cwd(),
  cli.input.length < 0 ? cli.input[0] : 'index.js'
)

;(async () => {
  // Generate a configuration based on our entrypoint.
  const config = require('../lib/config')(entry)

  const wantedPort = parseInt(cli.flags.port, 10)

  if (isNaN(wantedPort)) {
    console.error('> Invalid port.')
    return
  }

  const port = await getPort({ port: wantedPort })
  config.port = port

  serve({}, config)
})()
